#!/bin/bash

RED='\033[0;31m'
LRED='\033[1;31m'
NOCOLOR='\033[0m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'

current_user=$(who am i)

#To check if we are read write:
#grep " / " /proc/mounts | grep "\sro[\s,]" #Check read only
grep " / " /proc/mounts | grep "\srw[\s,]" > /dev/null
#status=0 means we are read write
#status=1 means we are read only
readonlymode=$?

SOURCE_HOME_DIR=$HOME
TARGET_HOME_DIR=/ro/$HOME


#For test purposes:
if [ "$1"  = "test" ] ; then
	SOURCE_HOME_DIR=$HOME
	
	if [ "$2"  = "" ] ; then
		echo "You should give the target dir as second argument. Exiting"
		exit 1
	else
		TARGET_HOME_DIR=$2
		mkdir -p $TARGET_HOME_DIR
	fi
fi

if [ "$readonlymode" = "0" ] ; then
	echo -e "${GREEN}##############################################################################${NOCOLOR}"
	echo -e "${GREEN}# Updating files because your system is Read-Write"
	echo -e "# "
	echo -e "# ${RED}Do not forget to go back to Read Only mode !!!"
	echo -e "${GREEN}##############################################################################${NOCOLOR}"
	
	for f in `ls -a $SOURCE_HOME_DIR`
	do
		FILE=$SOURCE_HOME_DIR/$f
		case $f in
			.lesshst | .bash* | .gitconfig | .Xauthority | .profile)
				cp -f $FILE $TARGET_HOME_DIR/
				;;
		
			.ssh | .ne)
				cp -f -r $FILE $TARGET_HOME_DIR/
				;;
		esac
		
	done
else
	echo -e "${RED}##############################################################################${NOCOLOR}"
	echo -e "${RED}# Modified files will ${LRED}NOT${RED} be SAVED"
	echo -e "# since you are in Read-Only mode."
	echo -e "# Use ${YELLOW}gorw${RED} script before logging out and call ${YELLOW}update_user_file script${RED}"
	echo -e "# to make your change permanently saved."
	echo -e "${RED}##############################################################################${NOCOLOR}"
fi

